<launch>


  <!-- WARNING:
  The nav_node config file originally called "nav_config.lua" must contain the ABSOLUTE path to the "map" file, 
  "goal_poses" and "start_pose" in this file have to manually be updated for each scene,
  this is b/c I cannot find a way to pass args from here to the lua file or into the config reader. -->


  <!-- Robot args -->
  <arg name="robot_x_pos" default="5.0"/>
  <arg name="robot_y_pos" default="5.0"/>
  <arg name="goal_threshold" default="5.0"/>

  <!-- Pedestrian args -->
  <arg name="immortal_peds" default="False"/>  <!-- must be capital bool, true is normal, false kills peds over time -->
  <arg name="actor_limit" default="25"/>  <!-- Max number of peds allowed in environment before oldest begin to be killed -->

  <!-- Map file args: just need to change "loc" if using consistant naming convention -->
  <arg name="loc" default ="700_along_1way"/>
  <arg name="pedsim_map_path" default="$(find pedsim_simulator)scenarios/$(arg loc).xml"/>
  <arg name="rviz_config_path" default="$(find pedsim_simulator)/rviz/700.rviz"/>
  <arg name="gazebo_map_path" default="$(find pedsim_gazebo_plugin)/worlds/$(arg loc).world"/>
  <arg name="nav_config_path" default="$(find control_stack)/config/nav_config_$(arg loc).lua"/>

  <!-- Simulator args -->
  <arg name="simulation_factor" default="1.0"/> <!-- Speed up -->
  <arg name="update_rate" default="25.0"/> <!-- Hz -->
  <arg name="node_start_delay" default="7.0"/>  <!-- (s) delay that lets the pedestrians overtake the robot before running experiment -->



  <!-- **************************************************************************** -->

  <!-- Pedsim Environment -->
  <include file="$(find pedsim_simulator)/launch/simulator.launch">
    <arg name="kbd_teleop" value="false"/>
    <arg name="rqt_teleop" value="false"/>
    <arg name="scene_file" value="$(arg pedsim_map_path)"/>
    <arg name="with_robot" value="false"/>
    <arg name="simulation_factor" value="$(arg simulation_factor)"/>
    <arg name="update_rate" value="$(arg update_rate)"/>
    <arg name="default_queue_size" value="10"/>
    <arg name="max_robot_speed" value="1.5"/>
    <arg name="robot_mode" value="1"/>
    <arg name="enable_groups" value="true"/>
    <arg name="pose_initial_x" value="$(arg robot_x_pos)"/>
    <arg name="pose_initial_y" value="$(arg robot_y_pos)"/>
    <arg name="pose_initial_theta" value="0.0"/>
  </include>

  <!-- Pedsim Visualizer -->
  <include file="$(find pedsim_visualizer)/launch/visualizer.launch"/>

  <!-- Rviz Configuration -->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(arg rviz_config_path)" if="true"/>

  <!-- Gazebo Configuration -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg gazebo_map_path)"/>
  </include>

  <!-- Gazebo Updates (this node spawn pedsim actors to gazebo once, then the plugin updates their pose) -->  
  <node pkg="pedsim_gazebo_plugin" type="spawn_pedsim_agents.py" name="spawn_pedsim_agents" output="screen">
    <param name="immortal_peds" value="$(arg immortal_peds)"/>
    <param name="actor_limit" value="$(arg actor_limit)"/>
  </node>

  <!-- Robot Constructor -->
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="x_pos" default="$(arg robot_x_pos)"/>
  <arg name="y_pos" default="$(arg robot_y_pos)"/>
  <arg name="z_pos" default="0.0"/>
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />
  <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf"  args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />

  <!-- Obstacle Detection Package -->
  <include file="$(find obstacle_detector)/launch/nodes.launch"/>

  <!-- Robot Navigation -->
  <node name="nav_node" pkg="control_stack" type="nav_node" respawn="true" launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' "> <!--output="screen"-->
    <param name="config_file_path" value="$(arg nav_config_path)"/>
  </node>

  <!-- Performance Metrics -->
  <node name="analytics_node" pkg="analytics" type="analytics_node" output="screen" launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' ">
    <param name="goal_threshold" value="$(arg goal_threshold)"/>
  </node>

</launch>
